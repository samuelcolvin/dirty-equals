[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'dirty_equals/version.py'

[project]
name = 'dirty-equals'
description = 'Doing dirty (but extremely useful) things with equals.'
authors = [{name = 'Samuel Colvin', email = 's@muelcolvin.com'}]
license = 'MIT'
readme = 'README.md'
classifiers = [
    'Development Status :: 4 - Beta',
    'Framework :: Pytest',
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'Intended Audience :: Information Technology',
    'Intended Audience :: Science/Research',
    'Intended Audience :: System Administrators',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
    'Typing :: Typed',
]
requires-python = '>=3.9'
optional-dependencies = {pydantic = ['pydantic>=2.4.2'] }
dynamic = ['version']

[project.urls]
Homepage = 'https://github.com/samuelcolvin/dirty-equals'
Documentation = 'https://dirty-equals.helpmanual.io'
Funding = 'https://github.com/sponsors/samuelcolvin'
Source = 'https://github.com/samuelcolvin/dirty-equals'
Changelog = 'https://github.com/samuelcolvin/dirty-equals/releases'

[dependency-groups]
dev = [
    "coverage[toml]>=7.6.1",
    "mypy>=1.14.1",
    "packaging>=25.0",
    "pydantic>=2.10.6",
    "pytest>=8.3.5",
    "pytest-examples>=0.0.18",
    "pytest-pretty>=1.2.0",
    "ruff>=0.13.1",
    "types-pytz>=2024.2.0.20241221",
]
# TODO update these deps to newer versions, I just froze them while migrationg from requirements files
docs = [
    "mike==2.1.3",
    "mkdocs==1.6.0",
    "mkdocs-autorefs==1.0.1",
    "mkdocs-material==9.5.31",
    "mkdocs-simple-hooks==0.1.5",
    "mkdocstrings[python]==0.25.2",
]

[tool.ruff]
line-length = 120
target-version = 'py39'
include = ["dirty_equals/**/*.py", "tests/**/*.py"]


[tool.ruff.lint]
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
ignore = ['E721']
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }

[tool.ruff.format]
# don't format python in docstrings, pytest-examples takes care of it
docstring-code-format = false
quote-style = "single"

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = "error"

[tool.coverage.run]
source = ["dirty_equals"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "if TYPE_CHECKING:",
    "@overload",
]

[tool.mypy]
strict = true
warn_return_any = false
show_error_codes = true
